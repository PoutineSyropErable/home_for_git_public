#!/bin/bash

music_dir="$HOME/Music/My Music"
playlist_dir="$HOME/Music/Playlist"

# Function to create a playlist for a given directory
create_playlist() {
    local dir="$1"

    # Check if directory exists under $music_dir
    if [ ! -d "$music_dir/$dir" ]; then
        echo "Error: Directory '$music_dir/$dir' not found!"
        return  # Skip to the next directory if current one doesn't exist
    fi
    
    # Initialize playlist file name with full path
    if [ "$dir" == "." ]; then
        playlist_name="$playlist_dir/$(basename "$music_dir").m3u"
    else
        playlist_name="$playlist_dir/$(basename "$music_dir/$dir").m3u"
    fi
    
    # Create Playlist directory if it doesn't exist
    mkdir -p "$playlist_dir"
    
    # Find all music files in the directory (non-recursively), sort them, and print full paths
    find "$music_dir/$dir" -maxdepth 1 -type f \( -iname "*.mp3" -o -iname "*.flac" -o -iname "*.ogg" -o -iname "*.wav" \) -print | sort > "$playlist_name"
    
    # Check if there are music files
    if [ ! -s "$playlist_name" ]; then
        echo "No music files found in '$dir'."
        return  # Skip to the next directory if no music files found
    fi
    
    echo "Playlist '$playlist_name' created with $(wc -l < "$playlist_name") songs."
}

# If no arguments are provided, use `find` to get directories
if [ $# -eq 0 ]; then
    # Change to the music directory
    cd "$music_dir" || exit 1

    # Process the main music directory
    create_playlist "."
    
    # Get the list of subdirectories
    while IFS= read -r dir; do
        # Remove trailing slash from directory name
        dir="${dir%/}"
        create_playlist "$dir"
    done < <(find . -maxdepth 1 -mindepth 1 -type d -print)
else
    # Iterate over each directory provided as argument
    for dir in "$@"; do
        create_playlist "$dir"
    done
fi

